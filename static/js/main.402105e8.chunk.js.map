{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/ErrorBoundary.js","components/Scroll.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","_ref","name","email","id","react_default","a","createElement","className","alt","src","concat","CardList","robots","Fragment","map","user","i","src_components_Card","key","SearchBox","searchChange","type","placeholder","onChange","ErrorBoundary","_Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","hasError","inherits","createClass","value","error","info","setState","children","Component","Scroll","style","overflowY","border","height","App","_useState","useState","_useState2","slicedToArray","setRobots","_useState3","_useState4","searchfield","setSearchfield","useEffect","fetch","then","response","json","users","console","log","filteredRobots","filter","robot","toLowerCase","includes","components_SearchBox","event","target","components_Scroll","components_ErrorBoundary","components_CardList","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","containers_App"],"mappings":"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","file":"static/js/main.402105e8.chunk.js","sourcesContent":["import React from 'react';\nimport 'tachyons';\nimport './Card.css';\n\nconst Card = ({ name, email, id }) => {\n\treturn (\n\t\t<div id='cardz' className='tc dib br3 pa3 ma2 mt3 grow bw2 shadow-5'>\n\t\t\t<img alt='robot' src={`https://robohash.org/${id}1?200x200`} /> \n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card.js';\n\n/* Can just use empty tags <></> instead of <div> if no styles or attributes are used */\nconst CardList = ({ robots }) => {\n\treturn (\n\t\t<> \n\t\t\t{\n      \t\t\trobots.map((user, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\tkey={robots[i].id} \n\t\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\t\temail={robots[i].email}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})\n      \t\t}\n    \t</>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({ searchChange }) => {\n\treturn (\n\t\t<div className='pa2'>\n\t\t\t<input \n\t\t\t\tclassName='tc pa3 mb3 b--washed-blue bg-white shadow-3' \n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='search robots'\n\t\t\t\tonChange={searchChange} \n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nexport default SearchBox;","import React, { Component } from 'react';\n\n\nclass ErrorBoundary extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\thasError: false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error, info) {\n\t\tthis.setState({hasError: true})\n\t}\n\n\trender() {\n\t\tif(this.state.hasError) {\n\t\t\treturn <h1>Oooops. That's not good.</h1>\n\t\t}\n\t\treturn this.props.children\n\t}\n}\n\n\n\n\n\n\nexport default ErrorBoundary;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style={{ overflowY: 'scroll', border: '2px solid black', height: '480px' }}>\n\t\t\t{props.children}\n\t\t</div>\n\t)\n}\n\nexport default Scroll;","import React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList.js';\nimport SearchBox from '../components/SearchBox.js';\nimport ErrorBoundary from '../components/ErrorBoundary.js';\nimport './App.css';\nimport Scroll from '../components/Scroll.js';\n\nfunction App() { //using hooks to create and update state.\n\t\n\tconst [robots, setRobots] = useState([]);\n\tconst [searchfield, setSearchfield] = useState('');\n\n\tuseEffect(() => {\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => {\n\t\t\t\treturn response.json();\n\t\t\t})\n\t\t\t.then(users => {\n\t\t\t\tsetRobots(users)\n\t\t\t})\n\t\t\tconsole.log('mounted');\n\t}, []); //the [] is a second argument that tells the useEffect hook to run again once whatever parameter in the [] changes instead of just continuosly running with each re-render. And since [] is blank, useEffect will only run once at page load.\n\n\tconst onSearchChange = (event) => {\n\t\tsetSearchfield(event.target.value);\n\t}\n\n\tconst filteredRobots = robots.filter(robot => {\n\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t})\n\treturn (\n\t\t<div className='tc'>\n\t\t\t<h1 className='f1'>RoboFriends</h1>\n\t\t\t<SearchBox searchChange={ onSearchChange }/>\n\t\t\t<Scroll>\n\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t<CardList robots={ filteredRobots }/>\n\t\t\t\t</ErrorBoundary>\n\t\t\t</Scroll>\n\t\t</div>\n\t);\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'; //React has webpack underneath the hood, so we can import it straight in without having to bundle or browserify\nimport ReactDOM from 'react-dom/client'; //ReactDOM is the glue that puts React together in web browsers specifically. ReactNative is for mobile apps, ReactVR for vr apps, etc\nimport './index.css'; //React allows us to add different CSS files to each different component. / means it is located in the same folder.\nimport App from './containers/App.js';\nimport reportWebVitals from './reportWebVitals';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}